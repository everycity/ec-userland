diff -ruN htop-2.0.0.orig/Action.c htop-2.0.0/Action.c
--- htop-2.0.0.orig/Action.c	2016-02-02 15:38:41.000000000 +0000
+++ htop-2.0.0/Action.c	2016-02-12 16:51:29.080414311 +0000
@@ -409,7 +409,6 @@
    { .key = "      a: ", .info = "set CPU affinity" },
 #endif
    { .key = "      e: ", .info = "show process environment" },
-   { .key = "      i: ", .info = "set IO prority" },
    { .key = "      l: ", .info = "list open files with lsof" },
    { .key = "      s: ", .info = "trace syscalls with strace" },
    { .key = "         ", .info = "" },
diff -ruN htop-2.0.0.orig/linux/LinuxProcess.c htop-2.0.0/linux/LinuxProcess.c
--- htop-2.0.0.orig/linux/LinuxProcess.c	2016-02-02 15:30:44.000000000 +0000
+++ htop-2.0.0/linux/LinuxProcess.c	2016-02-12 16:51:29.081161206 +0000
@@ -267,17 +267,6 @@
 */
 #define LinuxProcess_effectiveIOPriority(p_) (IOPriority_class(p_->ioPriority) == IOPRIO_CLASS_NONE ? IOPriority_tuple(IOPRIO_CLASS_BE, (p_->super.nice + 20) / 5) : p_->ioPriority)
 
-IOPriority LinuxProcess_updateIOPriority(LinuxProcess* this) {
-   IOPriority ioprio = syscall(SYS_ioprio_get, IOPRIO_WHO_PROCESS, this->super.pid);
-   this->ioPriority = ioprio;
-   return ioprio;
-}
-
-bool LinuxProcess_setIOPriority(LinuxProcess* this, IOPriority ioprio) {
-   syscall(SYS_ioprio_set, IOPRIO_WHO_PROCESS, this->super.pid, ioprio);
-   return (LinuxProcess_updateIOPriority(this) == ioprio);
-}
-
 void LinuxProcess_writeField(Process* this, RichString* str, ProcessField field) {
    LinuxProcess* lp = (LinuxProcess*) this;
    bool coloring = this->settings->highlightMegabytes;
diff -ruN htop-2.0.0.orig/linux/LinuxProcess.h htop-2.0.0/linux/LinuxProcess.h
--- htop-2.0.0.orig/linux/LinuxProcess.h	2016-02-02 15:30:45.000000000 +0000
+++ htop-2.0.0/linux/LinuxProcess.h	2016-02-12 16:51:29.081612858 +0000
@@ -147,10 +147,6 @@
 */
 #define LinuxProcess_effectiveIOPriority(p_) (IOPriority_class(p_->ioPriority) == IOPRIO_CLASS_NONE ? IOPriority_tuple(IOPRIO_CLASS_BE, (p_->super.nice + 20) / 5) : p_->ioPriority)
 
-IOPriority LinuxProcess_updateIOPriority(LinuxProcess* this);
-
-bool LinuxProcess_setIOPriority(LinuxProcess* this, IOPriority ioprio);
-
 void LinuxProcess_writeField(Process* this, RichString* str, ProcessField field);
 
 long LinuxProcess_compare(const void* v1, const void* v2);
diff -ruN htop-2.0.0.orig/linux/LinuxProcessList.c htop-2.0.0/linux/LinuxProcessList.c
--- htop-2.0.0.orig/linux/LinuxProcessList.c	2016-02-02 14:58:50.000000000 +0000
+++ htop-2.0.0/linux/LinuxProcessList.c	2016-02-12 16:51:29.082340565 +0000
@@ -552,8 +552,6 @@
       int commLen = 0;
       if (! LinuxProcessList_readStatFile(proc, dirname, name, command, &commLen))
          goto errorReadingProcess;
-      if (settings->flags & PROCESS_FLAG_LINUX_IOPRIO)
-         LinuxProcess_updateIOPriority(lp);
       float percent_cpu = (lp->utime + lp->stime - lasttimes) / period * 100.0;
       proc->percent_cpu = CLAMP(percent_cpu, 0.0, cpus * 100.0);
       if (isnan(proc->percent_cpu)) proc->percent_cpu = 0.0;
diff -ruN htop-2.0.0.orig/linux/Platform.c htop-2.0.0/linux/Platform.c
--- htop-2.0.0.orig/linux/Platform.c	2016-02-02 14:58:45.000000000 +0000
+++ htop-2.0.0/linux/Platform.c	2016-02-12 16:51:29.082828355 +0000
@@ -86,26 +86,7 @@
 
 unsigned int Platform_numberOfSignals = sizeof(Platform_signals)/sizeof(SignalItem);
 
-static Htop_Reaction Platform_actionSetIOPriority(State* st) {
-   Panel* panel = st->panel;
-
-   LinuxProcess* p = (LinuxProcess*) Panel_getSelected(panel);
-   if (!p) return HTOP_OK;
-   IOPriority ioprio = p->ioPriority;
-   Panel* ioprioPanel = IOPriorityPanel_new(ioprio);
-   void* set = Action_pickFromVector(st, ioprioPanel, 21);
-   if (set) {
-      IOPriority ioprio = IOPriorityPanel_getIOPriority(ioprioPanel);
-      bool ok = MainPanel_foreachProcess((MainPanel*)panel, (MainPanel_ForeachProcessFn) LinuxProcess_setIOPriority, (size_t) ioprio, NULL);
-      if (!ok)
-         beep();
-   }
-   Panel_delete((Object*)ioprioPanel);
-   return HTOP_REFRESH | HTOP_REDRAW_BAR | HTOP_UPDATE_PANELHDR;
-}
-
 void Platform_setBindings(Htop_Action* keys) {
-   keys['i'] = Platform_actionSetIOPriority;
 }
 
 MeterClass* Platform_meterTypes[] = {
