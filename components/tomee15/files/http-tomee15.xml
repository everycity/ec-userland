<?xml version="1.0"?>
<!DOCTYPE service_bundle SYSTEM "/usr/share/lib/xml/dtd/service_bundle.dtd.1">
<!--
//
// This file and its contents are supplied under the terms of the
// Common Development and Distribution License ("CDDL)". You may
// only use this file in accordance with the terms of the CDDL.
//
// A full copy of the text of the CDDL should have accompanied this
// source. A copy of the CDDL is also available via the Internet at
// http://www.illumos.org/license/CDDL.
//
//
// Copyright 2011 EveryCity Ltd. All rights reserved.
//
-->
<service_bundle type='manifest' name='tomee15'>

<service
	name='network/http/tomee15'
	type='service'
	version='1'>

	<!--
	  Because we may have multiple instances of network/http/tomee15
	  provided by different implementations, we keep dependencies
	  and methods within the instance.
	-->

	<instance name='default' enabled='false'>
		<!--
		  Wait for network interfaces to be initialized.
		-->
		<dependency name='network'
		    grouping='require_all'
		    restart_on='error'
		    type='service'>
		    <service_fmri value='svc:/milestone/network:default'/>
		</dependency>

		<!--
		  Wait for all local filesystems to be mounted.
		-->
		<dependency name='filesystem-local'
		    grouping='require_all'
		    restart_on='none'
		    type='service'>
		    <service_fmri
			value='svc:/system/filesystem/local:default'/>
		</dependency>

		<!--
		  Wait for automounting to be available, as we may be
		  serving data from home directories or other remote
		  filesystems.
		-->
		<dependency name='autofs'
		    grouping='optional_all'
		    restart_on='error'
		    type='service'>
		    <service_fmri
			value='svc:/system/filesystem/autofs:default'/>
		</dependency>

		<!--
		  Wait for NFS to become available, as we may be
		  serving data from NFS mountpoints.
		-->
		<dependency name='nfs'
		    grouping='optional_all'
		    restart_on='error'
		    type='service'>
		    <service_fmri
			value='svc:/network/nfs/client:default'/>
		</dependency>

		<exec_method
			type='method'
			name='start'
			exec='/ec/var/svc/method/http-tomee15 start'
			timeout_seconds='60'>
			<method_context>
			<method_credential
			  user='tomcat' group='tomcat'
			  privileges='basic,net_privaddr'/>
			</method_context>
		</exec_method>

		<exec_method
			type='method'
			name='stop'
			exec=':kill'
			timeout_seconds='90' />

		<property_group name='tomcat' type='application'>
			<stability value='Evolving' />
			<propval name='enable_64bit' type='boolean' value='false' />
			<propval name='catalina_home' type='astring' value='/ec/lib/tomee15' />
			<propval name='catalina_base' type='astring' value='/ec/var/tomee15' />
			<propval name='jvm_extra_options' type='astring' value='-server' />
			<propval name='jvm_gc_options' type='astring' value='-XX:+UseParallelGC -XX:+UseParallelOldGC -Xloggc:$CATALINA_BASE/logs/gc.log -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -verbose:gc' />
			<propval name='jvm_heap_options' type='astring' value='-XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=$CATALINA_BASE/logs' />
			<propval name='jvm_jmx_options' type='astring' value='-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.port=8001' />
			<propval name='jvm_xms_options' type='astring' value='-Xms1024m' />
			<propval name='jvm_xmx_options' type='astring' value='-Xmx1024m' />
			<propval name='jvm_permsize_options' type='astring' value='-XX:PermSize=128m' />
			<propval name='jvm_maxpermsize_options' type='astring' value='-XX:MaxPermSize=256m' />
		</property_group>

		<property_group name='startd' type='framework'>
			<!-- sub-process core dumps shouldn't restart
				session -->
			<propval name='ignore_error' type='astring'
				value='core,signal' />
		</property_group>

	</instance>

	<stability value='Evolving' />

</service>

</service_bundle>
