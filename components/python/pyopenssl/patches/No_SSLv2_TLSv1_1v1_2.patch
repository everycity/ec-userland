--- pyOpenSSL-0.11/OpenSSL/ssl/context.c.~1~	2010-11-01 21:49:55.000000000 +0000
+++ pyOpenSSL-0.11/OpenSSL/ssl/context.c	2016-03-07 16:20:01.053190375 +0000
@@ -243,8 +243,8 @@
 OpenSSL.SSL.Context instances define the parameters for setting up new SSL\n\
 connections.\n\
 \n\
-@param method: One of SSLv2_METHOD, SSLv3_METHOD, SSLv23_METHOD, or\n\
-               TLSv1_METHOD.\n\
+@param method: One of SSLv3_METHOD, SSLv23_METHOD,\n\
+               TLSv1_METHOD, TLSv1_1_METHOD, OR TLSv1_2_METHOD.\n\
 ";
 
 static char ssl_Context_load_verify_locations_doc[] = "\n\
@@ -1109,9 +1109,6 @@
     SSL_METHOD *method;
 
     switch (i_method) {
-        case ssl_SSLv2_METHOD:
-            method = SSLv2_method();
-            break;
         case ssl_SSLv23_METHOD:
             method = SSLv23_method();
             break;
@@ -1121,6 +1118,12 @@
         case ssl_TLSv1_METHOD:
             method = TLSv1_method();
             break;
+        case ssl_TLSv1_1_METHOD:
+            method = TLSv1_1_method();
+            break;
+        case ssl_TLSv1_2_METHOD:
+            method = TLSv1_2_method();
+            break;
         default:
             PyErr_SetString(PyExc_ValueError, "No such protocol");
             return NULL;
--- pyOpenSSL-0.11/OpenSSL/ssl/context.h.~1~	2010-11-01 21:49:55.000000000 +0000
+++ pyOpenSSL-0.11/OpenSSL/ssl/context.h	2016-03-07 16:20:16.473953840 +0000
@@ -33,10 +33,10 @@
     PyThreadState       *tstate;
 } ssl_ContextObj;
 
-#define ssl_SSLv2_METHOD      (1)
 #define ssl_SSLv3_METHOD      (2)
 #define ssl_SSLv23_METHOD     (3)
 #define ssl_TLSv1_METHOD      (4)
-
+#define ssl_TLSv1_1_METHOD    (5)
+#define ssl_TLSv1_2_METHOD    (6)
 
 #endif
--- pyOpenSSL-0.11/OpenSSL/ssl/ssl.c.~1~	2010-11-01 21:49:55.000000000 +0000
+++ pyOpenSSL-0.11/OpenSSL/ssl/ssl.c	2016-03-07 16:20:46.409000471 +0000
@@ -149,10 +149,11 @@
 #undef ADD_EXCEPTION
 
     /* Method constants */
-    PyModule_AddIntConstant(module, "SSLv2_METHOD",  ssl_SSLv2_METHOD);
     PyModule_AddIntConstant(module, "SSLv3_METHOD",  ssl_SSLv3_METHOD);
     PyModule_AddIntConstant(module, "SSLv23_METHOD", ssl_SSLv23_METHOD);
     PyModule_AddIntConstant(module, "TLSv1_METHOD",  ssl_TLSv1_METHOD);
+    PyModule_AddIntConstant(module, "TLSv1_1_METHOD",  ssl_TLSv1_1_METHOD);
+    PyModule_AddIntConstant(module, "TLSv1_2_METHOD",  ssl_TLSv1_2_METHOD);
 
     /* Verify constants */
     PyModule_AddIntConstant(module, "VERIFY_NONE", SSL_VERIFY_NONE);
@@ -172,6 +173,8 @@
     PyModule_AddIntConstant(module, "OP_NO_SSLv2", SSL_OP_NO_SSLv2);
     PyModule_AddIntConstant(module, "OP_NO_SSLv3", SSL_OP_NO_SSLv3);
     PyModule_AddIntConstant(module, "OP_NO_TLSv1", SSL_OP_NO_TLSv1);
+    PyModule_AddIntConstant(module, "OP_NO_TLSv1_1", SSL_OP_NO_TLSv1_1);
+    PyModule_AddIntConstant(module, "OP_NO_TLSv1_2", SSL_OP_NO_TLSv1_2);
 
     /* More SSL option constants */
     PyModule_AddIntConstant(module, "OP_MICROSOFT_SESS_ID_BUG", SSL_OP_MICROSOFT_SESS_ID_BUG);
