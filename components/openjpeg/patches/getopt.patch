--- openjpeg_v1_4_sources_r697/common/getopt.c.orig	2011-06-15 09:59:36.902828329 +0100
+++ openjpeg_v1_4_sources_r697/common/getopt.c	2011-06-15 09:59:50.285275311 +0100
@@ -45,7 +45,7 @@
  optind = 1,			/* index into parent argv vector */
  optopt,			/* character checked for validity */
  optreset;			/* reset getopt */
-const char *optarg;			/* argument associated with option */
+const char *optarga;			/* argument associated with option */
 
 typedef struct option
 {
@@ -103,12 +103,12 @@
 		}
   }
   if (*++oli != ':') {		/* don't need argument */
-    optarg = NULL;
+    optarga = NULL;
     if (!*place)
       ++optind;
   } else {			/* need an argument */
     if (*place)			/* no white space */
-      optarg = place;
+      optarga = place;
     else if (nargc <= ++optind) {	/* no arg */
       place = EMSG;
       if (*ostr == ':')
@@ -120,7 +120,7 @@
 				return (BADCH);
 			}
     } else			/* white space */
-      optarg = nargv[optind];
+      optarga = nargv[optind];
     place = EMSG;
     ++optind;
   }
@@ -180,16 +180,16 @@
 							++optind;
 						}
 					}else{ 
-						optarg=argv[optind+1];
-						if(optarg){
-							if (optarg[0] == '-'){ /* Has read next input parameter: No arg for current parameter */								
+						optarga=argv[optind+1];
+						if(optarga){
+							if (optarga[0] == '-'){ /* Has read next input parameter: No arg for current parameter */								
 								if (opterr) {
 									fprintf(stderr,"%s: option requires an argument\n",arg);
 									return (BADCH);
 								}
 							}
 						}
-						if (!optarg && o->has_arg==1) {	/* no argument there */
+						if (!optarga && o->has_arg==1) {	/* no argument there */
 							if (opterr) {
 								fprintf(stderr,"%s: option requires an argument \n",arg);
 								return (BADCH);
@@ -220,20 +220,20 @@
 					goto again;
 				}
 				if (tmp[1]==':') {	/* argument expected */
-					if (tmp[2]==':' || argv[optind][lastofs+2]) {	/* "-foo", return "oo" as optarg */
-						if (!*(optarg=argv[optind]+lastofs+2)) optarg=0;
+					if (tmp[2]==':' || argv[optind][lastofs+2]) {	/* "-foo", return "oo" as optarga */
+						if (!*(optarga=argv[optind]+lastofs+2)) optarga=0;
 						goto found;
 					}
-					optarg=argv[optind+1];
-					if(optarg){
-						if (optarg[0] == '-'){ /* Has read next input parameter: No arg for current parameter */
+					optarga=argv[optind+1];
+					if(optarga){
+						if (optarga[0] == '-'){ /* Has read next input parameter: No arg for current parameter */
 							if (opterr) {
 								fprintf(stderr,"%s: option requires an argument\n",arg);
 								return (BADCH);
 							}
 						}
 					}
-					if (!optarg) {	/* missing argument */
+					if (!optarga) {	/* missing argument */
 						if (opterr) {
 							fprintf(stderr,"%s: option requires an argument\n",arg);
 							return (BADCH);
