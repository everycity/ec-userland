--- pkg-gate/src/patch/M2Crypto/crl.patch.~1~	2011-03-11 16:49:05.000000000 +0000
+++ pkg-gate/src/patch/M2Crypto/crl.patch	2016-03-07 13:32:43.160473911 +0000
@@ -1,7 +1,7 @@
 diff -r 49981e7aa9ca M2Crypto-0.20.2/M2Crypto/X509.py
 --- M2Crypto/X509.py	Mon Jun 14 13:46:27 2010 -0700
 +++ M2Crypto/X509.py	Thu Jul 08 17:48:27 2010 -0700
-@@ -446,9 +446,9 @@
+@@ -447,9 +447,9 @@
          assert m2.x509_type_check(self.x509), "'x509' type error"
          return ASN1.ASN1_UTCTIME(m2.x509_get_not_after(self.x509))
  
@@ -13,15 +13,15 @@
  
      def set_pubkey(self, pkey):
          """
-@@ -1067,6 +1067,7 @@
+@@ -1068,6 +1068,7 @@
          else:
              self.crl = m2.x509_crl_new()
              self._pyfree = 1
 +        self.revocations = None
-             
+ 
      def __del__(self):
          if getattr(self, '_pyfree', 0):
-@@ -1083,22 +1084,67 @@
+@@ -1084,20 +1085,67 @@
          m2.x509_crl_print(buf.bio_ptr(), self.crl)
          return buf.read_all()
  
@@ -75,14 +75,12 @@
      @rtype: M2Crypto.X509.CRL
      @return: M2Crypto.X509.CRL object.
      """
-     f=BIO.openfile(file)
--    cptr=m2.x509_crl_read_pem(f.bio_ptr())
+     f = BIO.openfile(file)
+-    cptr = m2.x509_crl_read_pem(f.bio_ptr())
 -    f.close()
 -    if cptr is None:
 -        raise X509Error(Err.get_error())
 -    return CRL(cptr, 1)
--
--
 +    if format == FORMAT_PEM:
 +        cptr=m2.x509_crl_read_pem(f.bio_ptr())
 +        f.close()
@@ -163,15 +161,15 @@
 +}
 +
 +/* X509_CRL_get_REVOKED() is a macro. */
-+STACK *x509_CRL_get_revoked(X509_CRL *x) {
++STACK_OF(X509_REVOKED) *x509_CRL_get_revoked(X509_CRL *x) {
 +    return X509_CRL_get_REVOKED(x);
 +}
 +
-+int sk_x509_REVOKED_num(STACK *stack) {
++int sk_x509_REVOKED_num(STACK_OF(X509_REVOKED) *stack) {
 +    return sk_X509_REVOKED_num((STACK_OF(X509_REVOKED) *)stack);
 +}
 +
-+X509_REVOKED *sk_x509_REVOKED_get(STACK *stack, int x) {
++X509_REVOKED *sk_x509_REVOKED_get(STACK_OF(X509_REVOKED) *stack, int x) {
 +    return sk_X509_REVOKED_value((STACK_OF(X509_REVOKED) *)stack, x);
 +}
 +
